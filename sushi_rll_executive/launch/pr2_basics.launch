<!--

This file is for everything needed to make the pr2 do useful stuff that's not
task specific. For example, maps should not be in here.

-->

<!--
Removed perception
Removed move_arm
Removed head monitor
Removed planning environment node
Removed pr2_planning_environment.launch
(?) Commented out ompl_planning. We use the map frame. They use a frame on the robot for planning.
Removed pr2_planning_description.yaml which is also found in pr2_planning_environment.launch
(?) Removed trajectory_filter
Removed collision free IK
-->

<launch>
  <arg name="stereo" default="false"/>
  <arg name="model_set" default="SUSHI_MODEL_SET"/>
  <arg name="kinect_frame_prefix" default="/openni"/>

  <param if="$(arg stereo)" name="head_pointing_frame" value="/narrow_stereo_optical_frame"/>
  <group unless="$(arg stereo)">
    <param name="head_pointing_frame" value="$(arg kinect_frame_prefix)_rgb_optical_frame"/>
  </group>

  <include file="$(find sushi_executive)/launch/pr2_tabletop_manipulation.launch">
     <arg name="stereo" value="$(arg stereo)"/>
     <arg name="model_set" value="$(arg model_set)" />
     <arg name="kinect_frame_prefix" value="$(arg kinect_frame_prefix)" />
   </include>

  <node pkg="amcl" type="amcl" name="amcl" output="screen">
	  <remap from="scan" to="base_scan" />
	  <!-- Publish scans from best pose at a max of 10 Hz -->
	  <param name="base_frame_id" value="base_footprint"/>
	  <param name="odom_model_type" value="omni"/>
	  <param name="odom_alpha5" value="0.1"/>
	  <param name="transform_tolerance" value="0.2" />
	  <param name="gui_publish_rate" value="10.0"/>
	  <param name="laser_max_beams" value="30"/>
	  <param name="min_particles" value="500"/>
	  <param name="max_particles" value="5000"/>
	  <param name="kld_err" value="0.05"/>
	  <param name="kld_z" value="0.99"/>
	  <param name="odom_alpha1" value="0.2"/>
	  <param name="odom_alpha2" value="0.2"/>
	  <!-- translation std dev, m -->
	  <param name="odom_alpha3" value="0.8"/>
	  <param name="odom_alpha4" value="0.2"/>
	  <param name="laser_z_hit" value="0.5"/>
	  <param name="laser_z_short" value="0.05"/>
	  <param name="laser_z_max" value="0.05"/>
	  <param name="laser_z_rand" value="0.5"/>
	  <param name="laser_sigma_hit" value="0.2"/>
	  <param name="laser_lambda_short" value="0.1"/>
	  <param name="laser_lambda_short" value="0.1"/>
	  <param name="laser_model_type" value="likelihood_field"/>
	  <!-- <param name="laser_model_type" value="beam"/> -->
	  <param name="laser_likelihood_max_dist" value="2.0"/>
	  <param name="update_min_d" value="0.2"/>
	  <param name="update_min_a" value="0.5"/>
	  <param name="odom_frame_id" value="odom_combined"/>
	  <param name="resample_interval" value="1"/>
	  <param name="transform_tolerance" value="0.1"/>
	  <param name="recovery_alpha_slow" value="0.0"/>
	  <param name="recovery_alpha_fast" value="0.0"/>
	  <remap from="map" to="map_server_map"/>
  </node>

  <!-- load a teleop that can be run at the same time as move_base -->
  <include file="$(find pr2_navigation_teleop)/teleop.xml" />

  <!-- service for transforming using a supplied robot state rather than TF -->
  <node pkg="state_transformer" name="state_transformer" type="state_transformer"/>

  <!-- service that re-publishes AMCL poses so that a recent pose is available whenever -->
  <node pkg="pr2_python" name="posegossip" type="posegossip.py"/>


  <node pkg="topic_tools" type="throttle" name="throttle_joint_states" args="messages joint_states 4.0"/>

  <!-- launch move_base with sbpl_3dnav_planner as a plugin -->
  <node pkg="move_base" type="move_base" name="move_base" output="screen" >
    <param name="base_global_planner" value="Sbpl3DNavPlanner"/>
    <rosparam file="$(find sbpl_full_body_planner)/config/pr2_both_arms.yaml" command="load"/>
    <rosparam file="$(find sbpl_full_body_planner)/config/pr2_body.yaml" command="load"/>
    
    <param name="planner/motion_primitive_file" value="$(find sbpl_full_body_planner)/config/pr2-32.mprim"/>
    <param name="planner/base_motion_primitive_file" value="$(find sbpl_full_body_planner)/config/full_body_base.mprim"/>
    <param name="planner/left_arm_description_file" value="$(find sbpl_arm_planner)/config/pr2_left_arm.cfg"/>
    <param name="planner/right_arm_description_file" value="$(find sbpl_arm_planner)/config/pr2_right_arm.cfg"/>

    <param name="minimum_working_distance" value="0.3"/>
    <param name="maximum_working_distance" value="0.7"/>
    <param name="yaw_steps" value="16"/>
    <param name="radii_steps" value="2"/>
   
    <!-- For SBPL3DNavPlanner -->
    <remap from="joint_states" to="joint_states_throttle" />

    <remap from="cmd_vel" to="base_controller/command"/>
    <remap from="collision_map_occ" to="collision_map_out"/>
    
    <rosparam file="$(find sbpl_3dnav_planner)/config/sbpl_global_params.yaml" command="load"/>
    <rosparam file="$(find sbpl_3dnav_planner)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find sbpl_3dnav_planner)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find sbpl_3dnav_planner)/config/local_costmap_params_close.yaml" command="load" />
    <rosparam file="$(find sbpl_3dnav_planner)/config/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find sbpl_3dnav_planner)/config/base_local_planner_trajectory.yaml" command="load" />
    <rosparam file="$(find sbpl_3dnav_planner)/config/base_local_planner_poses.yaml" command="load" />
  </node>
</launch>
