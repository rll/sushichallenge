  <launch>
        <!-- This may be 0.025 -->
	<arg name="checker_size" value="0.0245" />

	<arg name="urdf_output_file" value="/tmp/new.xml" />
	<arg name="new_cam_ns" value="/camera/rgb" />
	<arg name="urdf_cam_ns" value="/wide_stereo/left" />
	<arg name="mounting_frame" value="/head_plate_frame" />
	<arg name="urdf_input_file" value="/etc/ros/electric/urdf/robot.xml" />
	<arg name="checker_rows" value="4" />
	<arg name="checker_cols" value="5" />

	
	<arg name="headless" default="false" />
	<param name="urdf_output_filename" value="$(arg urdf_output_file)" />
	<param name="robot_description" textfile="$(arg urdf_input_file)" />
	<param name="new_cam_ns" value="$(arg new_cam_ns)" />
	<param name="urdf_cam_ns" value ="$(arg urdf_cam_ns)" />
	<param name="mounting_frame" value ="$(arg mounting_frame)" />
        <param name="optimizer_conditional_resetter_enable" value ="True" />

    	<node pkg="camera_pose_toolkits" type="transform_finder_node" name="transform_finder" output="screen" >
	</node>
	<node pkg="camera_pose_toolkits" type="urdf_writer_node" name="urdf_writer" output="screen"/>
	<node pkg="camera_pose_toolkits" type="camera_pose_static_transform_tf_broadcaster_node" name="camera_pose_static_transform_tf_broadcaster" output="screen"/>

	<!-- start camera pose calibration -->
        <include file="$(find camera_pose_calibration)/launch_extrinsics/calibrate_2_camera.launch" >
          <arg name="camera1_ns" value="$(arg new_cam_ns)" />
          <arg name="camera2_ns" value="$(arg urdf_cam_ns)" />
	  <arg name="checker_rows" value="$(arg checker_rows)" />
	  <arg name="checker_cols" value="$(arg checker_cols)" />
	  <arg name="checker_size" value="$(arg checker_size)" />
	  <arg name="headless" value="$(arg headless)" />
        </include>
  </launch>
